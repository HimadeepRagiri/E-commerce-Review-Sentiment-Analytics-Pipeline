services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      retries: 5
      start_period: 10s
    networks:
      - airflow-network

  airflow:
    build: .  # Build the custom image from the Dockerfile in the current directory
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      AIRFLOW_CONN_SPARK_DEFAULT: spark://local[*]
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "${FERNET_KEY}"
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
    volumes:
      - ./dags:/root/airflow/dags
      - ./spark_jobs:/opt/airflow/spark_jobs
      - ./data:/opt/airflow/data
      - ./.env:/opt/airflow/.env
      - ./config:/opt/airflow/config
      - ./streamlit_app:/opt/airflow/streamlit_app
    ports:
      - 8080:8080
      - 8501:8501
    networks:
      - airflow-network
    entrypoint:
      - bash
      - -c
      - |
        source /opt/airflow/.env && \
        airflow db init
        airflow db migrate
        airflow users create \
          --username admin --firstname Admin --lastname User \
          --role Admin --email admin@example.com --password admin && \
        airflow scheduler & airflow webserver

networks:
  airflow-network:
    driver: bridge